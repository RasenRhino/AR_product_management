{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hrtime = exports.parseHexTo255 = exports.parseColor = exports.parseColorString = exports.getFontString = void 0;\n\nconst getFontString = options => {\n  const styleStrings = [];\n\n  if (options.fontStyle) {\n    if (typeof options.fontStyle === \"boolean\") {\n      styleStrings.push(`italic`);\n    } else {\n      styleStrings.push(options.fontStyle);\n    }\n  }\n\n  if (options.fontWeight) {\n    if (typeof options.fontWeight === \"boolean\") {\n      styleStrings.push(`bold`);\n    } else {\n      styleStrings.push(options.fontWeight.toString());\n    }\n  }\n\n  styleStrings.push(`${options.fontSize}px`);\n  styleStrings.push(`\"${options.fontFamily}\"`);\n  return styleStrings.join(\" \");\n};\n\nexports.getFontString = getFontString;\n\nconst parseColorString = value => {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = exports.parseColor(value);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexports.parseColorString = parseColorString;\n\nconst parseColor = value => {\n  if (typeof value === \"string\") {\n    value = value.replace(/^0x/i, \"\");\n    value = value.replace(/^#/, \"\");\n    const r = exports.parseHexTo255(value.substr(0, 2), 0);\n    const g = exports.parseHexTo255(value.substr(2, 2), 0);\n    const b = exports.parseHexTo255(value.substr(4, 2), 0);\n    const a = exports.parseHexTo255(value.substr(6, 2), 255) / 255;\n    return {\n      r,\n      g,\n      b,\n      a\n    };\n  } else {\n    if (value <= 0xFFFFFF) {\n      const r = value >> 16 & 0xFF;\n      const g = value >> 8 & 0xFF;\n      const b = value >> 0 & 0xFF;\n      const a = 1;\n      return {\n        r,\n        g,\n        b,\n        a\n      };\n    } else {\n      const r = value >> 24 & 0xFF;\n      const g = value >> 16 & 0xFF;\n      const b = value >> 8 & 0xFF;\n      const a = (value >> 0 & 0xFF) / 255;\n      return {\n        r,\n        g,\n        b,\n        a\n      };\n    }\n  }\n};\n\nexports.parseColor = parseColor;\n\nconst parseHexTo255 = (value, defaultValue) => {\n  try {\n    if (value) {\n      const decimal = parseInt(`0x${value}`, 16);\n\n      if (!isNaN(decimal)) {\n        return Math.max(0, Math.min(decimal, 255));\n      }\n    }\n  } catch (err) {// ignore any error\n  }\n\n  return defaultValue;\n};\n\nexports.parseHexTo255 = parseHexTo255;\n\nconst hrtime = previousHrTime => {\n  if (process && process.hrtime) {\n    return process.hrtime(previousHrTime);\n  } else {\n    const performance = window.performance;\n    const baseNow = Math.floor((Date.now() - performance.now()) * 1e-3);\n    const clocktime = performance.now() * 1e-3;\n    let seconds = Math.floor(clocktime) + baseNow;\n    let nanoseconds = Math.floor(clocktime % 1 * 1e9);\n\n    if (previousHrTime) {\n      seconds = seconds - previousHrTime[0];\n      nanoseconds = nanoseconds - previousHrTime[1];\n\n      if (nanoseconds < 0) {\n        seconds--;\n        nanoseconds += 1e9;\n      }\n    }\n\n    return [seconds, nanoseconds];\n  }\n};\n\nexports.hrtime = hrtime;","map":{"version":3,"names":["Object","defineProperty","exports","value","hrtime","parseHexTo255","parseColor","parseColorString","getFontString","options","styleStrings","fontStyle","push","fontWeight","toString","fontSize","fontFamily","join","r","g","b","a","replace","substr","defaultValue","decimal","parseInt","isNaN","Math","max","min","err","previousHrTime","process","performance","window","baseNow","floor","Date","now","clocktime","seconds","nanoseconds"],"sources":["/mnt/r/flipkart/product_management/adminportal/node_modules/ultimate-text-to-image/build/utils/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hrtime = exports.parseHexTo255 = exports.parseColor = exports.parseColorString = exports.getFontString = void 0;\nconst getFontString = (options) => {\n    const styleStrings = [];\n    if (options.fontStyle) {\n        if (typeof options.fontStyle === \"boolean\") {\n            styleStrings.push(`italic`);\n        }\n        else {\n            styleStrings.push(options.fontStyle);\n        }\n    }\n    if (options.fontWeight) {\n        if (typeof options.fontWeight === \"boolean\") {\n            styleStrings.push(`bold`);\n        }\n        else {\n            styleStrings.push(options.fontWeight.toString());\n        }\n    }\n    styleStrings.push(`${options.fontSize}px`);\n    styleStrings.push(`\"${options.fontFamily}\"`);\n    return styleStrings.join(\" \");\n};\nexports.getFontString = getFontString;\nconst parseColorString = (value) => {\n    const { r, g, b, a } = exports.parseColor(value);\n    return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\nexports.parseColorString = parseColorString;\nconst parseColor = (value) => {\n    if (typeof value === \"string\") {\n        value = value.replace(/^0x/i, \"\");\n        value = value.replace(/^#/, \"\");\n        const r = exports.parseHexTo255(value.substr(0, 2), 0);\n        const g = exports.parseHexTo255(value.substr(2, 2), 0);\n        const b = exports.parseHexTo255(value.substr(4, 2), 0);\n        const a = exports.parseHexTo255(value.substr(6, 2), 255) / 255;\n        return { r, g, b, a };\n    }\n    else {\n        if (value <= 0xFFFFFF) {\n            const r = (value >> 16) & 0xFF;\n            const g = (value >> 8) & 0xFF;\n            const b = (value >> 0) & 0xFF;\n            const a = 1;\n            return { r, g, b, a };\n        }\n        else {\n            const r = (value >> 24) & 0xFF;\n            const g = (value >> 16) & 0xFF;\n            const b = (value >> 8) & 0xFF;\n            const a = ((value >> 0) & 0xFF) / 255;\n            return { r, g, b, a };\n        }\n    }\n};\nexports.parseColor = parseColor;\nconst parseHexTo255 = (value, defaultValue) => {\n    try {\n        if (value) {\n            const decimal = parseInt(`0x${value}`, 16);\n            if (!isNaN(decimal)) {\n                return Math.max(0, Math.min(decimal, 255));\n            }\n        }\n    }\n    catch (err) {\n        // ignore any error\n    }\n    return defaultValue;\n};\nexports.parseHexTo255 = parseHexTo255;\nconst hrtime = (previousHrTime) => {\n    if (process && process.hrtime) {\n        return process.hrtime(previousHrTime);\n    }\n    else {\n        const performance = window.performance;\n        const baseNow = Math.floor((Date.now() - performance.now()) * 1e-3);\n        const clocktime = performance.now() * 1e-3;\n        let seconds = Math.floor(clocktime) + baseNow;\n        let nanoseconds = Math.floor((clocktime % 1) * 1e9);\n        if (previousHrTime) {\n            seconds = seconds - previousHrTime[0];\n            nanoseconds = nanoseconds - previousHrTime[1];\n            if (nanoseconds < 0) {\n                seconds--;\n                nanoseconds += 1e9;\n            }\n        }\n        return [seconds, nanoseconds];\n    }\n};\nexports.hrtime = hrtime;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}